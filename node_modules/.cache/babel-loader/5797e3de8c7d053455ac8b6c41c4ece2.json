{"ast":null,"code":"var _jsxFileName = \"/Users/raghavasrivastava/Downloads/Health-and-Fitness-Website/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useCallback, useState } from 'react';\nimport MenuButton from './nested-components/MenuButton';\nimport Menu from './nested-components/NavMenu';\nimport Logo from './nested-components/Logo';\nimport { Link } from 'react-router-dom';\nimport '../styles/desktop/Header.scss';\nimport '../styles/tablet/Header.scss';\nimport '../styles/mobile/Header.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TRANSPARENT = {\n  backgroundColor: \"transparent\",\n  boxShadow: \"none\"\n};\nconst FILLED_BACKGROUND = {\n  backgroundColor: \"#fbf8f3\",\n  boxShadow: \"-10px 10px 30px rgba(119, 119, 119, 0.1)\"\n};\n\nconst isMobile = () => document.body.offsetWidth < 769;\n\nconst Header = _ref => {\n  _s();\n\n  let {\n    scroll,\n    isMenuOpened,\n    setIsMenuOpened\n  } = _ref;\n  // state variable used to handle header style toggle on scroll\n  const [headerStyle, setHeaderStyle] = useState(null); // adds background color and dropdown shadow when user scrolls\n  // otherwise removes background and dropdown shadow when user returns to the top of the page\n\n  const handleBackgroundColor = useCallback(() => {\n    if (isMobile()) return;\n    scroll > 0 ? setHeaderStyle(FILLED_BACKGROUND) : setHeaderStyle(TRANSPARENT);\n  }, [scroll]); // calls handleBackgroundColor() whenever user scrolls\n\n  useEffect(() => {\n    handleBackgroundColor();\n  }, [handleBackgroundColor, scroll]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    style: headerStyle,\n    children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n      isMenuOpened: isMenuOpened,\n      setIsMenuOpened: setIsMenuOpened\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {\n      setIsMenuOpened: setIsMenuOpened\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      isMenuOpened: isMenuOpened,\n      setIsMenuOpened: setIsMenuOpened\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Favorites, {\n      setIsMenuOpened: setIsMenuOpened\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"CsTuWupAbvnQdp0QXoiFmhrLeRo=\");\n\n_c = Header;\n\nconst Favorites = _ref2 => {\n  let {\n    setIsMenuOpened\n  } = _ref2;\n\n  const handleClick = () => {\n    window.scrollTo(0, 0);\n    setIsMenuOpened(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"favorites\",\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"Favorites\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"fa-solid fa-bookmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Favorites;\nexport default Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Favorites\");","map":{"version":3,"sources":["/Users/raghavasrivastava/Downloads/Health-and-Fitness-Website/src/components/Header.js"],"names":["useEffect","useCallback","useState","MenuButton","Menu","Logo","Link","TRANSPARENT","backgroundColor","boxShadow","FILLED_BACKGROUND","isMobile","document","body","offsetWidth","Header","scroll","isMenuOpened","setIsMenuOpened","headerStyle","setHeaderStyle","handleBackgroundColor","Favorites","handleClick","window","scrollTo"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,+BAAP;AACA,OAAO,8BAAP;AACA,OAAO,8BAAP;;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,eAAe,EAAE,aADD;AAEhBC,EAAAA,SAAS,EAAE;AAFK,CAApB;AAKA,MAAMC,iBAAiB,GAAG;AACtBF,EAAAA,eAAe,EAAE,SADK;AAEtBC,EAAAA,SAAS,EAAE;AAFW,CAA1B;;AAKA,MAAME,QAAQ,GAAG,MAAMC,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4B,GAAnD;;AAEA,MAAMC,MAAM,GAAG,QAA+C;AAAA;;AAAA,MAA9C;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,GAA8C;AAC1D;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,IAAD,CAA9C,CAF0D,CAI1D;AACA;;AACA,QAAMmB,qBAAqB,GAAGpB,WAAW,CAAC,MAAM;AAC5C,QAAIU,QAAQ,EAAZ,EAAgB;AAEhBK,IAAAA,MAAM,GAAG,CAAT,GAAaI,cAAc,CAACV,iBAAD,CAA3B,GAAiDU,cAAc,CAACb,WAAD,CAA/D;AACH,GAJwC,EAIvC,CAACS,MAAD,CAJuC,CAAzC,CAN0D,CAY1D;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,CAACA,qBAAD,EAAwBL,MAAxB,CAFM,CAAT;AAIA,sBACI;AAAQ,IAAA,KAAK,EAAEG,WAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEF,YAA1B;AAAwC,MAAA,eAAe,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,eAAe,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,YAAY,EAAED,YAApB;AAAkC,MAAA,eAAe,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,SAAD;AAAW,MAAA,eAAe,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzBD;;GAAMH,M;;KAAAA,M;;AA2BN,MAAMO,SAAS,GAAG,SAAwB;AAAA,MAAvB;AAAEJ,IAAAA;AAAF,GAAuB;;AAEtC,QAAMK,WAAW,GAAE,MAAM;AACrBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAP,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEK,WAApC;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAdD;;MAAMD,S;AAgBN,eAAeP,MAAf","sourcesContent":["import { useEffect, useCallback, useState } from 'react';\r\nimport MenuButton from './nested-components/MenuButton';\r\nimport Menu from './nested-components/NavMenu';\r\nimport Logo from './nested-components/Logo';\r\nimport {Link} from 'react-router-dom';\r\nimport '../styles/desktop/Header.scss';\r\nimport '../styles/tablet/Header.scss';\r\nimport '../styles/mobile/Header.scss';\r\n\r\nconst TRANSPARENT = {\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\"\r\n}\r\n\r\nconst FILLED_BACKGROUND = {\r\n    backgroundColor: \"#fbf8f3\",\r\n    boxShadow: \"-10px 10px 30px rgba(119, 119, 119, 0.1)\"\r\n}\r\n\r\nconst isMobile = () => document.body.offsetWidth < 769;\r\n\r\nconst Header = ({ scroll, isMenuOpened, setIsMenuOpened }) => {\r\n    // state variable used to handle header style toggle on scroll\r\n    const [headerStyle, setHeaderStyle] = useState(null);\r\n\r\n    // adds background color and dropdown shadow when user scrolls\r\n    // otherwise removes background and dropdown shadow when user returns to the top of the page\r\n    const handleBackgroundColor = useCallback(() => {\r\n        if (isMobile()) return;\r\n\r\n        scroll > 0 ? setHeaderStyle(FILLED_BACKGROUND) : setHeaderStyle(TRANSPARENT);\r\n    },[scroll]);\r\n\r\n    // calls handleBackgroundColor() whenever user scrolls\r\n    useEffect(() => {\r\n        handleBackgroundColor();\r\n    }, [handleBackgroundColor, scroll]);\r\n\r\n    return (\r\n        <header style={headerStyle}>\r\n            <MenuButton isMenuOpened={isMenuOpened} setIsMenuOpened={setIsMenuOpened} />\r\n            <Logo setIsMenuOpened={setIsMenuOpened} />\r\n            <Menu isMenuOpened={isMenuOpened} setIsMenuOpened={setIsMenuOpened} />\r\n            <Favorites setIsMenuOpened={setIsMenuOpened} />\r\n        </header>\r\n  )\r\n}\r\n\r\nconst Favorites = ({ setIsMenuOpened}) => {\r\n\r\n    const handleClick= () => {\r\n        window.scrollTo(0, 0)\r\n        setIsMenuOpened(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"favorites\" onClick={handleClick} >\r\n            <Link to=\"Favorites\">\r\n                <svg className=\"fa-solid fa-bookmark\" />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}