{"ast":null,"code":"var _jsxFileName = \"/Users/raghavasrivastava/Downloads/Health-and-Fitness-Website/src/components/nested-components/Message.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// value and onChange are used here to better control form input and store it in a \n// state variable(value) using the state update function(handleChange) which are\n// passed down by parent component\nconst Message = _ref => {\n  let {\n    value,\n    handleChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"message\",\n      className: \"message-label\",\n      children: \"message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: getTextareaRows(),\n      placeholder: \"Enter your message here\",\n      name: \"message\",\n      value: value,\n      onChange: e => handleChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Message;\n\nconst getTextareaRows = () => {\n  const screenWidth = document.body.offsetWidth;\n\n  if (screenWidth > 768 && screenWidth < 1025) {\n    return 3;\n  } else {\n    return 4;\n  }\n};\n\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/raghavasrivastava/Downloads/Health-and-Fitness-Website/src/components/nested-components/Message.js"],"names":["Message","value","handleChange","getTextareaRows","e","target","screenWidth","document","body","offsetWidth"],"mappings":";;;AAAA;AACA;AACA;AACA,MAAMA,OAAO,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA4B;AACzC,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,SAAS,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAEC,eAAe,EADzB;AAEI,MAAA,WAAW,EAAC,yBAFhB;AAGI,MAAA,IAAI,EAAC,SAHT;AAII,MAAA,KAAK,EAAEF,KAJX;AAKI,MAAA,QAAQ,EAAGG,CAAD,IAAOF,YAAY,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbD;;KAAMD,O;;AAeN,MAAMG,eAAe,GAAG,MAAM;AAC1B,QAAMG,WAAW,GAAGC,QAAQ,CAACC,IAAT,CAAcC,WAAlC;;AAEA,MAAIH,WAAW,GAAG,GAAd,IAAqBA,WAAW,GAAG,IAAvC,EAA6C;AACzC,WAAO,CAAP;AACH,GAFD,MAEO;AACH,WAAO,CAAP;AACH;AACJ,CARD;;AAUA,eAAeN,OAAf","sourcesContent":["// value and onChange are used here to better control form input and store it in a \r\n// state variable(value) using the state update function(handleChange) which are\r\n// passed down by parent component\r\nconst Message = ({ value, handleChange }) => {\r\n    return (\r\n        <div className=\"input-field\">\r\n            <label htmlFor=\"message\" className=\"message-label\">message</label>\r\n            <textarea\r\n                rows={getTextareaRows()}\r\n                placeholder=\"Enter your message here\"\r\n                name=\"message\"\r\n                value={value}\r\n                onChange={(e) => handleChange(e.target.value)}\r\n            ></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getTextareaRows = () => {\r\n    const screenWidth = document.body.offsetWidth;\r\n\r\n    if (screenWidth > 768 && screenWidth < 1025) {\r\n        return 3;\r\n    } else {\r\n        return 4;\r\n    }\r\n}\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}